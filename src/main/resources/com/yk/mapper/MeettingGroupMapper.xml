<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yk.dao.MeettingGroupMapper">
  <resultMap id="BaseResultMap" type="com.yk.pojo.MeettingGroup">
    <result column="meettingId" jdbcType="INTEGER" property="meettingid" />
    <result column="deptId" jdbcType="INTEGER" property="deptid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="unRead" jdbcType="INTEGER" property="unread" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    meettingId, deptId, userId, flag, unRead
  </sql>
  <select id="selectByExample" parameterType="com.yk.pojo.MeettingGroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from y_meettinggroup
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yk.pojo.MeettingGroupExample">
    delete from y_meettinggroup
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yk.pojo.MeettingGroup">
    insert into y_meettinggroup (meettingId, deptId, userId, 
      flag, unRead)
    values (#{meettingid,jdbcType=INTEGER}, #{deptid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{flag,jdbcType=INTEGER}, #{unread,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yk.pojo.MeettingGroup">
    insert into y_meettinggroup
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="meettingid != null">
        meettingId,
      </if>
      <if test="deptid != null">
        deptId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="unread != null">
        unRead,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="meettingid != null">
        #{meettingid,jdbcType=INTEGER},
      </if>
      <if test="deptid != null">
        #{deptid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="unread != null">
        #{unread,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yk.pojo.MeettingGroupExample" resultType="java.lang.Long">
    select count(*) from y_meettinggroup
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update y_meettinggroup
    <set>
      <if test="record.meettingid != null">
        meettingId = #{record.meettingid,jdbcType=INTEGER},
      </if>
      <if test="record.deptid != null">
        deptId = #{record.deptid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.unread != null">
        unRead = #{record.unread,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update y_meettinggroup
    set meettingId = #{record.meettingid,jdbcType=INTEGER},
      deptId = #{record.deptid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=INTEGER},
      unRead = #{record.unread,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>